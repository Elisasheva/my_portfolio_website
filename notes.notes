wtyczka live server
file -> settings -> auto save

git status
git add . -> changes to staged changes
git commit -m "wiadomosc" -> zakomitowanie zakomitowanie
git reset --hard -> wszystkie zmiany zostają wycofane i wracamy do biezącego commita - jesli cos popsuje

logowanie do github: Elisasheva, Redhot6666
git push
git pull

git log -> przeglądanie commitów
git log --pretty=oneline -> jw, ale w jednej linii





[markdown]

# nagl 1
## nagl 2 poziomu
### 3 poziomu
**wytluszczenie**
*kursywa*

1. element
2. elem

- elem 
- ewg

[google](https://google.pl)

![tree](https://d1whtlypfis84e.cloudfront.net/guides/wp-content/uploads/2019/08/03091106/Trees-1024x682.jpg) obrazek

kod `console.log`

``` javascript
let myNumber = 5;
console.log(myNumber);
```

MARKDOWN źródła wiedzy(edytory):

https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet
DILLINGER
StackEdit




OpenGraph -> kontrola tego, jak wyświetla się nasza udostępniona strona np. na fb

- dodawanie obrazka

[ ] zrobić obrazek (najlepiej jakoś 1200x1200 i tekst jakoś na środku) -> 
dodać do folderu obrazkow do strony
wpisać w <body> w html: 
<meta property="og:image" content="pictures/tytulobrazka.jpg">

gdzie to sprawdzić?
https://developers.facebook.com/tools/debug/

Informacje o OpenGraph:
ogp.me



Ikonka strony

<link rel="icon" href="ikona.png">



BACKGROUND-IMAGE

.. dwie kropki w sciezce:
url("../images/landscape.jpg");

- no-repeat - obrazek się nie powtarza
- space - obrazek powtarza się tyle razy, ile się zmieści cały, pusta przestrzeń jest równo rozmieszczona między obrazkami
- round - obrazki rozciągają się tak, by nie było żadnej przestrzeni między nimi
- repeat - domyślna wartość
- różne wartości w poziomie i w pionie:
np. no-repeat repeat lub space round
repeat-y lub repeat-x - powtarzanie wyłącznie w pionie lub w poziomie

BACKGROUND-POSITION

- center
- top | right | bottom | left
- top right
- 25% 75% (od lewej i od góry)
- right 10% bottom 20%
- 50px 80px

BACKGROUND-SIZE

- 100px - szerokość 100px, wysokość automatyczna
- auto 100px - szerokość automatyczna, wysokość 100px
- cover - wypełnia element, zachowując proporcje, przycina w pionie lub w poziomie
- contain - wypełnia element, zachowując proporcje, zostawia pustą przestrzeń w pionie lub w poziomie

NAJLEPIEJ: 
background-position: center
bachground-size: cover

BACKGROUND-ATTACHMENT

określa jak zachowuje się tło przy przewijaniu
- fixed - w ogóle się nie rusza
- local - “przyklejone” do treści, treść się przewija i tlo tego
- scroll - “przyklejone” do elementu, nie przewija się z treścią (wartosc domyslna)

SKRÓT 

background: center / contain no-repeat url("../images/landscape.jpg") #ccc;



                CSS


wcięcie w pierwszej linii akapitu:

text-indent: 50px; lub w procentach (% szerokosci strony)


TEXT-DECORATION

text-decoration: underline dotted red;

- text-decoration-line
underline
overline
line-through
kilka po spacji (np. underline overline)
none
- text-decoration-color
- text-decoration-style
solid | double | dotted | dashed | wavy

TEXT-TRANSFORM

przydaje się do zamiany wszystkich liter na małe, wielkie lub do zamiany wszystkich pierwszych liter w słowach na wielkie
- uppercase - wszystkie litery wielkie
- lowercase - wszystkie litery małe
- capitalize - pierwsza litera w każdym słowie wielka, reszta niezmieniona

OBJECT-FIT

-określa, jak skalować np. obrazek, by wpasować się w kontener
 cover - wypełnia kontener, ścina boki; zeby obrazek się nie rozciągał
- contain - mieści się w kontenerze, zostawia pustą przestrzeń po bokach
- fill - wypełnia kontener, nie zachowując proporcji (domyślne) 

OBJECT-POSITION

polozenie obrazka w kontenerze, jesli nie zajmuje calego kontenera i jest uciety, mozna np. ustawic zeby prawa strona byla widoczna albo lewa, a nie srodek
format taki sam jak przy background-position
domyślnie: 50% 50%

CALC
width: calc(100% - 80px); jest to na calą szerokość odjąć ileś px
działania
+ -
koniecznie ze spacją!
* /



        FLEX

do kontenera: display:flex;
dodając, tworzymy "flex container" i w srodku "flex-items"
